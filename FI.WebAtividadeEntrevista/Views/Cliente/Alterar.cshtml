@model WebAtividadeEntrevista.Models.ClienteModel
@{
    ViewBag.Title = "Alterar Cliente";
}
@section scripts{
    <script>
        var urlPost = '@Url.Action("Alterar", "Cliente", new { area = "" })';
        var obj = @Html.Raw(Json.Encode(Model));
        var urlRetorno = '@Url.Action("Index", "Cliente", new { area = "" })';
    </script>
    @Scripts.Render("~/bundles/altClientes")
    <script>
        $(document).ready(function () {
            $("#CPF").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
        });
    </script>
    <script>
        function VerificaCPF(elemento) {
            CPF = elemento.value;
            CPF = CPF.replace(/[^\d]+/g, '');

            if (CPF == '') return alert("Por favor, digite um CPF");

            if (CPF.length != 11 ||
                CPF == "00000000000" ||
                CPF == "11111111111" ||
                CPF == "22222222222" ||
                CPF == "33333333333" ||
                CPF == "44444444444" ||
                CPF == "55555555555" ||
                CPF == "66666666666" ||
                CPF == "77777777777" ||
                CPF == "88888888888" ||
                CPF == "99999999999")
                return alert("Insira um CPF válido!");

            //VALIDANDO PRIMEIRO DIGITO
            add = 0;
            for (i = 0; i < 9; i++)
                add += parseInt(CPF.charAt(i)) * (10 - i);
            rev = 11 - (add % 11);
            if (rev == 10 || rev == 11)
                rev = 0;
            if (rev != parseInt(CPF.charAt(9)))
                return alert("Insira um CPF válido!");

            //VALIDANDO SEGUNDO DIGITO
            add = 0;
            for (i = 0; i < 10; i++)
                add += parseInt(CPF.charAt(i)) * (11 - i);
            rev = 11 - (add % 11);
            if (rev == 10 || rev == 11)
                rev = 0;
            if (rev != parseInt(CPF.charAt(10)))
                return false;
            return true;
        }
    </script>
}
<h2>@Html.Raw(ViewBag.Title)</h2>
@Html.Partial("Forms")